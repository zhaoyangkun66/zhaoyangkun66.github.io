[1,["07oPDKxJtGPYkCRl9SbM4C","80N/k4i0dGPbjNPOjhWxIB","3f52hPwSdLdLmMtv1pGnvj","80EaKNhxFE8Yj3UlZjWmtq"],["node","_effectAsset","_textureSetter","root","bgNode","data","_spriteFrame"],["cc.SpriteFrame",["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1],["cc.Prefab",["_name"],2],["cc.Node",["_name","_components","_prefab","_contentSize"],2,12,4,5],["74aaeC/yxxGVJib1zEDzbCd",["node","bgNode"],3,1,1],["4de38la48RHFI/D1qyPvm+b",["node"],3,1],["cc.PrefabInfo",["root"],3,1],["cc.Sprite",["_sizeMode","node","_materials"],2,1,3]],[[1,0,1,2,4],[2,0,1,3],[3,0,2],[4,0,1,2,3,2],[5,0,1,1],[6,0,1],[7,0,1],[8,0,1,2,2]],[[[[0,"Ripple",[{"hash":1037836425,"record":null,"name":"Ripple|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n in vec3 a_position;\n in vec4 a_color;\n out vec4 v_color;\n in vec2 a_uv0;\n out vec2 v_uv0;\n void main () {\n   gl_Position = cc_matViewProj * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n   v_color = a_color;\n }","frag":"\nprecision highp float;\nin vec4 v_color;\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform Ripple\n{\n  vec2  coor_center1;\n  vec2  coor_center2;\n  vec2  coor_center3;\n  vec2  coor_center4;\n  vec2  coor_center5;\n  vec2  coor_center6;\n  vec2  coor_center7;\n  vec2  coor_center8;\n  float run_time1;\n  float run_time2;\n  float run_time3;\n  float run_time4;\n  float run_time5;\n  float run_time6;\n  float run_time7;\n  float run_time8;\n  int ripple_num;\n};\nfloat PI=3.1415927;\nfloat ripple_cycle = 0.4;\nfloat life_span = 4.0;\nvec2 rippleCalculate(vec2 temp, float run_time, vec2 coor_center)\n{\n  float ripple_distance = distance(coor_center, temp);\n  float correction = 0.0;\n  if (ripple_distance < (run_time / life_span))\n  {\n    correction = ( ripple_cycle / life_span)/((run_time / life_span) - ripple_distance);\n    if (correction > 1.0) correction = 1.0;\n    correction = correction * correction;\n    correction = sin(2.0 * PI * ((run_time / life_span) - ripple_distance)  * life_span / ripple_cycle) * correction;\n    correction = correction * (1.0 - ripple_distance / (run_time / life_span));\n    correction = correction * (1.0 - run_time / life_span);\n    correction = correction * 0.1;\n    correction = correction / distance(coor_center, temp);\n    temp = temp  + (temp  - coor_center) * correction;\n  }\n  return temp;\n}\nvoid main () {\n  vec2 temp = v_uv0;\n  if (ripple_num >= 1)\n  {\n    temp.x = temp.x * 1.775;\n    temp = rippleCalculate(temp,run_time1,coor_center1);\n    if (ripple_num >= 2)\n    {\n      temp = rippleCalculate(temp,run_time2,coor_center2);\n      if (ripple_num >= 3)\n      {\n        temp = rippleCalculate(temp,run_time3,coor_center3);\n        if (ripple_num >= 4)\n        {\n          temp = rippleCalculate(temp,run_time4,coor_center4);\n          if (ripple_num >= 5)\n          {\n            temp = rippleCalculate(temp,run_time5,coor_center5);\n            if (ripple_num >= 6)\n            {\n              temp = rippleCalculate(temp,run_time6,coor_center6);\n              if (ripple_num >= 7)\n              {\n                temp = rippleCalculate(temp,run_time7,coor_center7);\n                if (ripple_num >= 8)\n                {\n                  temp = rippleCalculate(temp,run_time8,coor_center8);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    temp.x = temp.x / 1.775;\n    temp = clamp(temp, vec2(0.0, 0.0), vec2(1.0, 1.0));\n  }\n  gl_FragColor = texture2D(texture, temp);\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\n attribute vec3 a_position;\n attribute vec4 a_color;\n varying vec4 v_color;\n attribute vec2 a_uv0;\n varying vec2 v_uv0;\n void main () {\n   gl_Position = cc_matViewProj * vec4(a_position, 1);\n   v_uv0 = a_uv0;\n   v_color = a_color;\n }","frag":"\nprecision highp float;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform vec2 coor_center1;\nuniform vec2 coor_center2;\nuniform vec2 coor_center3;\nuniform vec2 coor_center4;\nuniform vec2 coor_center5;\nuniform vec2 coor_center6;\nuniform vec2 coor_center7;\nuniform vec2 coor_center8;\nuniform float run_time1;\nuniform float run_time2;\nuniform float run_time3;\nuniform float run_time4;\nuniform float run_time5;\nuniform float run_time6;\nuniform float run_time7;\nuniform float run_time8;\nuniform int ripple_num;\nfloat PI=3.1415927;\nfloat ripple_cycle = 0.4;\nfloat life_span = 4.0;\nvec2 rippleCalculate(vec2 temp, float run_time, vec2 coor_center)\n{\n  float ripple_distance = distance(coor_center, temp);\n  float correction = 0.0;\n  if (ripple_distance < (run_time / life_span))\n  {\n    correction = ( ripple_cycle / life_span)/((run_time / life_span) - ripple_distance);\n    if (correction > 1.0) correction = 1.0;\n    correction = correction * correction;\n    correction = sin(2.0 * PI * ((run_time / life_span) - ripple_distance)  * life_span / ripple_cycle) * correction;\n    correction = correction * (1.0 - ripple_distance / (run_time / life_span));\n    correction = correction * (1.0 - run_time / life_span);\n    correction = correction * 0.1;\n    correction = correction / distance(coor_center, temp);\n    temp = temp  + (temp  - coor_center) * correction;\n  }\n  return temp;\n}\nvoid main () {\n  vec2 temp = v_uv0;\n  if (ripple_num >= 1)\n  {\n    temp.x = temp.x * 1.775;\n    temp = rippleCalculate(temp,run_time1,coor_center1);\n    if (ripple_num >= 2)\n    {\n      temp = rippleCalculate(temp,run_time2,coor_center2);\n      if (ripple_num >= 3)\n      {\n        temp = rippleCalculate(temp,run_time3,coor_center3);\n        if (ripple_num >= 4)\n        {\n          temp = rippleCalculate(temp,run_time4,coor_center4);\n          if (ripple_num >= 5)\n          {\n            temp = rippleCalculate(temp,run_time5,coor_center5);\n            if (ripple_num >= 6)\n            {\n              temp = rippleCalculate(temp,run_time6,coor_center6);\n              if (ripple_num >= 7)\n              {\n                temp = rippleCalculate(temp,run_time7,coor_center7);\n                if (ripple_num >= 8)\n                {\n                  temp = rippleCalculate(temp,run_time8,coor_center8);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    temp.x = temp.x / 1.775;\n    temp = clamp(temp, vec2(0.0, 0.0), vec2(1.0, 1.0));\n  }\n  gl_FragColor = texture2D(texture, temp);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[],"samplers":[]}},"defines":[],"blocks":[{"name":"Ripple","binding":0,"members":[{"name":"coor_center1","type":14,"count":1},{"name":"coor_center2","type":14,"count":1},{"name":"coor_center3","type":14,"count":1},{"name":"coor_center4","type":14,"count":1},{"name":"coor_center5","type":14,"count":1},{"name":"coor_center6","type":14,"count":1},{"name":"coor_center7","type":14,"count":1},{"name":"coor_center8","type":14,"count":1},{"name":"run_time1","type":13,"count":1},{"name":"run_time2","type":13,"count":1},{"name":"run_time3","type":13,"count":1},{"name":"run_time4","type":13,"count":1},{"name":"run_time5","type":13,"count":1},{"name":"run_time6","type":13,"count":1},{"name":"run_time7","type":13,"count":1},{"name":"run_time8","type":13,"count":1},{"name":"ripple_num","type":5,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":[]}]}],[{"passes":[{"program":"Ripple|vs|fs","blendState":{"blendSrc":770,"blendDst":771,"blendSrcAlpha":770,"blendDstAlpha":771,"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"ripple_num":{"type":5,"value":[0]},"coor_center1":{"type":14,"value":[0,0]},"run_time1":{"type":13,"value":[0]},"coor_center2":{"type":14,"value":[0,0]},"run_time2":{"type":13,"value":[0]},"coor_center3":{"type":14,"value":[0,0]},"run_time3":{"type":13,"value":[0]},"coor_center4":{"type":14,"value":[0,0]},"run_time4":{"type":13,"value":[0]},"coor_center5":{"type":14,"value":[0,0]},"run_time5":{"type":13,"value":[0]},"coor_center6":{"type":14,"value":[0,0]},"run_time6":{"type":13,"value":[0]},"coor_center7":{"type":14,"value":[0,0]},"run_time7":{"type":13,"value":[0]},"coor_center8":{"type":14,"value":[0,0]},"run_time8":{"type":13,"value":[0]}}}]}]]],0,0,[],[],[]],[[[1,"Ripple",{"0":{"props":{},"defines":{}}}]],0,0,[0],[1],[0]],[[{"name":"bg_3","rect":[0,0,1334,750],"offset":[0,0],"originalSize":[1334,750],"capInsets":[0,0,0,0]}],[0],0,[0],[2],[1]],[[[2,"battleBg"],[3,"Layer",[[[4,-3,-2],-4,[5,-5]],4,1,4],[6,-1],[5,1704,960]],[7,0,1,[0]]],0,[0,3,1,0,4,2,0,0,1,0,-2,2,0,0,1,0,5,1,5],[0,2],[-1,6],[2,3]]]]